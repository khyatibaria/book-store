{"ast":null,"code":"import { Response } from \"miragejs\";\nimport { formatDate, requiresAuth } from \"../utils/authUtils\";\n/**\r\n * All the routes related to Wishlist are present here.\r\n * These are private routes.\r\n * Client needs to add \"authorization\" header with JWT token in it to access it.\r\n * */\n\n/**\r\n * This handler handles getting items to user's wishlist.\r\n * send GET Request at /api/user/wishlist\r\n * */\n\nexport const getWishlistItemsHandler = function (schema, request) {\n  const userId = requiresAuth.call(this, request);\n\n  if (!userId) {\n    return new Response(404, {}, {\n      errors: [\"The email you entered is not Registered. Not Found error\"]\n    });\n  }\n\n  const userWishlist = schema.users.findBy({\n    _id: userId\n  }).wishlist;\n  return new Response(200, {}, {\n    wishlist: userWishlist\n  });\n};\n/**\r\n * This handler handles adding items to user's wishlist.\r\n * send POST Request at /api/user/wishlist\r\n * body contains {product}\r\n * */\n\nexport const addItemToWishlistHandler = function (schema, request) {\n  const userId = requiresAuth.call(this, request);\n\n  try {\n    if (!userId) {\n      return new Response(404, {}, {\n        errors: [\"The email you entered is not Registered. Not Found error\"]\n      });\n    }\n\n    const userWishlist = schema.users.findBy({\n      _id: userId\n    }).wishlist;\n    const {\n      product\n    } = JSON.parse(request.requestBody);\n    userWishlist.push({ ...product,\n      createdAt: formatDate(),\n      updatedAt: formatDate()\n    });\n    this.db.users.update({\n      _id: userId\n    }, {\n      wishlist: userWishlist\n    });\n    return new Response(201, {}, {\n      wishlist: userWishlist\n    });\n  } catch (error) {\n    return new Response(500, {}, {\n      error\n    });\n  }\n};\n/**\r\n * This handler handles removing items to user's wishlist.\r\n * send DELETE Request at /api/user/wishlist\r\n * body contains {product}\r\n * */\n\nexport const removeItemFromWishlistHandler = function (schema, request) {\n  const userId = requiresAuth.call(this, request);\n\n  try {\n    if (!userId) {\n      return new Response(404, {}, {\n        errors: [\"The email you entered is not Registered. Not Found error\"]\n      });\n    }\n\n    let userWishlist = schema.users.findBy({\n      _id: userId\n    }).wishlist;\n    const productId = request.params.productId;\n    userWishlist = userWishlist.filter(item => item._id !== productId);\n    this.db.users.update({\n      _id: userId\n    }, {\n      wishlist: userWishlist\n    });\n    return new Response(200, {}, {\n      wishlist: userWishlist\n    });\n  } catch (error) {\n    return new Response(500, {}, {\n      error\n    });\n  }\n};","map":{"version":3,"names":["Response","formatDate","requiresAuth","getWishlistItemsHandler","schema","request","userId","call","errors","userWishlist","users","findBy","_id","wishlist","addItemToWishlistHandler","product","JSON","parse","requestBody","push","createdAt","updatedAt","db","update","error","removeItemFromWishlistHandler","productId","params","filter","item"],"sources":["D:/Neog Projects/book-store/book-store/src/backend/controllers/WishlistController.js"],"sourcesContent":["import { Response } from \"miragejs\";\r\nimport { formatDate, requiresAuth } from \"../utils/authUtils\";\r\n\r\n/**\r\n * All the routes related to Wishlist are present here.\r\n * These are private routes.\r\n * Client needs to add \"authorization\" header with JWT token in it to access it.\r\n * */\r\n\r\n/**\r\n * This handler handles getting items to user's wishlist.\r\n * send GET Request at /api/user/wishlist\r\n * */\r\n\r\nexport const getWishlistItemsHandler = function (schema, request) {\r\n  const userId = requiresAuth.call(this, request);\r\n  if (!userId) {\r\n    return new Response(\r\n      404,\r\n      {},\r\n      {\r\n        errors: [\"The email you entered is not Registered. Not Found error\"],\r\n      }\r\n    );\r\n  }\r\n  const userWishlist = schema.users.findBy({ _id: userId }).wishlist;\r\n  return new Response(200, {}, { wishlist: userWishlist });\r\n};\r\n\r\n/**\r\n * This handler handles adding items to user's wishlist.\r\n * send POST Request at /api/user/wishlist\r\n * body contains {product}\r\n * */\r\n\r\nexport const addItemToWishlistHandler = function (schema, request) {\r\n  const userId = requiresAuth.call(this, request);\r\n  try {\r\n    if (!userId) {\r\n      return new Response(\r\n        404,\r\n        {},\r\n        {\r\n          errors: [\"The email you entered is not Registered. Not Found error\"],\r\n        }\r\n      );\r\n    }\r\n    const userWishlist = schema.users.findBy({ _id: userId }).wishlist;\r\n    const { product } = JSON.parse(request.requestBody);\r\n    userWishlist.push({\r\n      ...product,\r\n      createdAt: formatDate(),\r\n      updatedAt: formatDate(),\r\n    });\r\n    this.db.users.update({ _id: userId }, { wishlist: userWishlist });\r\n    return new Response(201, {}, { wishlist: userWishlist });\r\n  } catch (error) {\r\n    return new Response(\r\n      500,\r\n      {},\r\n      {\r\n        error,\r\n      }\r\n    );\r\n  }\r\n};\r\n\r\n/**\r\n * This handler handles removing items to user's wishlist.\r\n * send DELETE Request at /api/user/wishlist\r\n * body contains {product}\r\n * */\r\n\r\nexport const removeItemFromWishlistHandler = function (schema, request) {\r\n  const userId = requiresAuth.call(this, request);\r\n  try {\r\n    if (!userId) {\r\n      return new Response(\r\n        404,\r\n        {},\r\n        {\r\n          errors: [\"The email you entered is not Registered. Not Found error\"],\r\n        }\r\n      );\r\n    }\r\n    let userWishlist = schema.users.findBy({ _id: userId }).wishlist;\r\n    const productId = request.params.productId;\r\n    userWishlist = userWishlist.filter((item) => item._id !== productId);\r\n    this.db.users.update({ _id: userId }, { wishlist: userWishlist });\r\n    return new Response(200, {}, { wishlist: userWishlist });\r\n  } catch (error) {\r\n    return new Response(\r\n      500,\r\n      {},\r\n      {\r\n        error,\r\n      }\r\n    );\r\n  }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}